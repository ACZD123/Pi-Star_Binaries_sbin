#!/bin/bash
#
##############################################################################
#                                                                            #
#                        Pi-Star Auto Upgrade Tool                           #
#                                                                            #
#     Version 1.0, Code, Design and Development by Andy Taylor (MW0MWZ).     #
#                                                                            #
#        Make it simple to upgrade to the current version of Pi-Star.        #
#                                                                            #
##############################################################################
#
if [ "$(id -u)" != "0" ]; then
  echo -e "You need to be root to run this command...\n"
  exit 1
fi

main_function() {
	# Get the current Modem
	if [ -f /etc/dstar-radio.mmdvmhost ]; then
		pistarModem=$(awk -F "=" '/Hardware/ {print $2}' /etc/dstar-radio.mmdvmhost)
	elif [ -f /etc/dstar-radio.dstarrepeater ]; then
		pistarModem=$(awk -F "=" '/Hardware/ {print $2}' /etc/dstar-radio.dstarrepeater)
	else
		pistarModem=Unknown
	fi

	# Get the Pi-Star Version Info
	pistarCurVersion=$(awk -F "= " '/Version/ {print $2}' /etc/pistar-release)
	# Get the hardware type, this may be important later (RPi | NanoPi | OdroidXU4)
	pistarHardware=$(awk -F "= " '/Hardware/ {print $2}' /etc/pistar-release)

	# Make the disk writable
	mount -o remount,rw /
	mount -o remount,rw /boot

	echo "Detected Pi-Star ${pistarCurVersion} running on ${pistarHardware} hardware, attached to ${pistarModem} modem..."

	case ${pistarCurVersion} in
	3.4.1)
		if [ ! -z "${pistarHardware}" ]; then
			Message="Upgraded from ${pistarCurVersion} to 3.4.2..."
			echo "Installing extra software..."
			apt-get update
			apt-get install -y stm32flash
			echo "Cleaning up unused files..."
	                rm -f /usr/local/etc/config_clean.zip
			echo "Bumping the version information..."
        	        sed -i 's/3.4.1/3.4.2/g' /etc/pistar-release
                	sed -i 's/3.4.1/3.4.2/g' /etc/motd
		else
			Message="In-place upgrades from 3.4.1 are not supported..."
		fi
	;;
	3.4.2)
		if [ ! -z "${pistarHardware}" ]; then
			Message="Upgraded from ${pistarCurVersion} to 3.4.3..."
			sed -i 's/3.4.2/3.4.3/g' /etc/pistar-release
			sed -i 's/3.4.2/3.4.3/g' /etc/motd
		else
			Message="In-place upgrades from 3.4.2 are not supported..."
		fi
	;;
	3.4.3)
		# Check to see if the USB Max Current setting is in place or not...
		if grep -Fxq "max_usb_current=1" /boot/config.txt
			then
    			# It's already there, just version bump
			if [ ! -z "${pistarHardware}" ]; then
				Message="Upgraded from ${pistarCurVersion} to 3.4.4..."
				sed -i 's/3.4.3/3.4.4/g' /etc/pistar-release
				sed -i 's/3.4.3/3.4.4/g' /etc/motd
			else
				Message="In-place upgrades from 3.4.3 are not supported..."
			fi
		else
			# Add the config lines and then version bump
			echo "Updating boot config to add high current USB support"
			echo -e "\n# Increase USB Current\nmax_usb_current=1" >> /boot/config.txt
			if [ ! -z "${pistarHardware}" ]; then
				Message="Upgraded from ${pistarCurVersion} to 3.4.4..."
				sed -i 's/3.4.3/3.4.4/g' /etc/pistar-release
				sed -i 's/3.4.3/3.4.4/g' /etc/motd
			else
				Message="In-place upgrades from 3.4.3 are not supported..."
			fi
		fi
	;;
	3.4.4)
		if [ ! -z "${pistarHardware}" ]; then
			Message="Upgraded from ${pistarCurVersion} to 3.4.5..."
			sed -i 's/3.4.4/3.4.5/g' /etc/pistar-release
			sed -i 's/3.4.4/3.4.5/g' /etc/motd
			echo "Installing Shell in a Box..."
			apt-get update
			apt-get install -y shellinabox
			echo "Configuring Shell in a Box..."
			sed -i '/SHELLINABOX_PORT=/c SHELLINABOX_PORT=2222' /etc/default/shellinabox
			sed -i '/SHELLINABOX_ARGS=/c SHELLINABOX_ARGS="--no-beep --disable-ssl-menu --disable-ssl --css=/etc/shellinabox/options-enabled/00_White\\ On\\ Black.css"' /etc/default/shellinabox
			rm -rf /etc/shellinabox/options-enabled/00+Black\ on\ White.css
			rm -rf /etc/shellinabox/options-enabled/01_Monochrome.css
			systemctl enable shellinabox
			systemctl start shellinabox
			systemctl restart shellinabox
			echo "Updating firewall..."
			/usr/local/sbin/pistar-firewall  > /dev/null 2>&1
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.5)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.5/3.4.6/g' /etc/pistar-release
                	sed -i 's/3.4.5/3.4.6/g' /etc/motd
			sed -i '13d;17d' /etc/motd
			sed -i '2,9d' /etc/motd
			sed -i '2i║                                                                       ║' /etc/motd
			sed -i '3i║           ██████╗ ██╗      ███████╗████████╗ █████╗ ██████╗           ║' /etc/motd
			sed -i '4i║           ██╔══██╗██║      ██╔════╝╚══██╔══╝██╔══██╗██╔══██╗          ║' /etc/motd
			sed -i '5i║           ██████╔╝██║█████╗███████╗   ██║   ███████║██████╔╝          ║' /etc/motd
			sed -i '6i║           ██╔═══╝ ██║╚════╝╚════██║   ██║   ██╔══██║██╔══██╗          ║' /etc/motd
			sed -i '7i║           ██║     ██║      ███████║   ██║   ██║  ██║██║  ██║          ║' /etc/motd
			sed -i '8i║           ╚═╝     ╚═╝      ╚══════╝   ╚═╝   ╚═╝  ╚═╝╚═╝  ╚═╝          ║' /etc/motd
			sed -i '9i║                                                                       ║' /etc/motd
			Message="Upgraded from ${pistarCurVersion} to 3.4.6..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.6)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.6/3.4.7/g' /etc/pistar-release
                	sed -i 's/3.4.6/3.4.7/g' /etc/motd
			apt-get update
			apt-get install -y libimobiledevice-utils usb-modeswitch usb-modeswitch-data
			Message="Upgraded from ${pistarCurVersion} to 3.4.7..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.7)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.7/3.4.8/g' /etc/pistar-release
                	sed -i 's/3.4.7/3.4.8/g' /etc/motd
			cd /tmp
			curl --fail -O -s http://archive.raspbian.org/raspbian/pool/main/o/openssl1.0/libssl1.0.2_1.0.2n-1_armhf.deb
			curl --fail -O -s http://archive.raspbian.org/raspbian/pool/main/s/shellinabox/shellinabox_2.20_armhf.deb
			dpkg -i /tmp/libssl1.0.2_1.0.2n-1_armhf.deb
			rm /tmp/libssl1.0.2_1.0.2n-1_armhf.deb
			if [ -z "$STY" ]; then exec screen -dm -S update dpkg -i /tmp/shellinabox_2.20_armhf.deb "$0"; fi
			Message="Upgraded from ${pistarCurVersion} to 3.4.8..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.8)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.8/3.4.9/g' /etc/pistar-release
			sed -i 's/3.4.8/3.4.9/g' /etc/motd
			apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 7638D0442B90D010
			apt-key adv --keyserver hkp://keyserver.ubuntu.com:80 --recv-keys 8B48AD6246925553
			echo 'deb http://httpredir.debian.org/debian jessie-backports main contrib non-free' > /etc/apt/sources.list.d/jessie-backports.list
			apt-get update
			apt-get -t jessie-backports install usb-modeswitch usb-modeswitch-data
			Message="Upgraded from ${pistarCurVersion} to 3.4.9..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.9)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.9/3.4.10/g' /etc/pistar-release
                	sed -i '10,1d' /etc/motd
			sed -i '10i╚═══════════════════════════════════════════════════════════════v3.4.10═╝' /etc/motd

			# Add the Colby Ross Random Seed fix
			rm -rf /var/lib/systemd/random-seed
			ln -s /tmp/random-seed /var/lib/systemd/random-seed

			# Add the Unit file(s)
			echo '[Unit]' > /lib/systemd/system/ysf2dmr.service
			echo 'Description=Pi-Star YSF2DMR Service' >> /lib/systemd/system/ysf2dmr.service
			echo 'After=syslog.target network.target mmdvmhost.timer' >> /lib/systemd/system/ysf2dmr.service
			echo '' >> /lib/systemd/system/ysf2dmr.service
			echo '[Service]' >> /lib/systemd/system/ysf2dmr.service
			echo 'Type=forking' >> /lib/systemd/system/ysf2dmr.service
			echo 'ExecStart=/usr/local/sbin/ysf2dmr.service start' >> /lib/systemd/system/ysf2dmr.service
			echo 'ExecStop=/usr/local/sbin/ysf2dmr.service stop' >> /lib/systemd/system/ysf2dmr.service
			echo 'ExecReload=/usr/local/sbin/ysf2dmr.service restart' >> /lib/systemd/system/ysf2dmr.service
			echo '' >> /lib/systemd/system/ysf2dmr.service
			echo '[Install]' >> /lib/systemd/system/ysf2dmr.service
			echo 'WantedBy=multi-user.target' >> /lib/systemd/system/ysf2dmr.service

			echo '[Timer]' > /lib/systemd/system/ysf2dmr.timer
			echo 'OnStartupSec=20' >> /lib/systemd/system/ysf2dmr.timer
			echo '' >> /lib/systemd/system/ysf2dmr.timer
			echo '[Install]' >> /lib/systemd/system/ysf2dmr.timer
			echo 'WantedBy=multi-user.target' >> /lib/systemd/system/ysf2dmr.timer

			# Restart SystemD and add the service
			systemctl daemon-reload
			systemctl enable ysf2dmr.timer
		
			Message="Upgraded from ${pistarCurVersion} to 3.4.10..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.10)
		if [ ! -z "${pistarHardware}" ]; then
			sed -i 's/3.4.10/3.4.11/g' /etc/pistar-release
                	sed -i 's/3.4.10/3.4.11/g' /etc/motd
		
			# Install the tools
			apt-get update
			apt-get install -y hostapd dnsmasq
			systemctl daemon-reload
			systemctl disable hostapd
			systemctl disable dnsmasq
		
			# Setup the config(s)
			echo 'DAEMON_CONF="/etc/hostapd/hostapd.conf"' >> /etc/default/hostapd
		
			echo 'interface=wlan0_ap' > /etc/hostapd/hostapd.conf
			echo 'ssid=Pi-Star' >> /etc/hostapd/hostapd.conf
			echo 'hw_mode=g' >> /etc/hostapd/hostapd.conf
			echo 'macaddr_acl=0' >> /etc/hostapd/hostapd.conf
			echo 'auth_algs=1' >> /etc/hostapd/hostapd.conf
			echo 'ignore_broadcast_ssid=0' >> /etc/hostapd/hostapd.conf
			echo 'channel=6' >> /etc/hostapd/hostapd.conf
			echo 'wpa=2' >> /etc/hostapd/hostapd.conf
			echo 'wpa_passphrase=raspberry' >> /etc/hostapd/hostapd.conf
			echo 'wpa_key_mgmt=WPA-PSK' >> /etc/hostapd/hostapd.conf
			echo 'wpa_pairwise=TKIP' >> /etc/hostapd/hostapd.conf
			echo 'rsn_pairwise=CCMP' >> /etc/hostapd/hostapd.conf
		
			echo '' >> /etc/network/interfaces
			echo 'iface wlan0_ap inet static' >> /etc/network/interfaces
			echo '  hwaddress ether b8:27:eb:00:00:01' >> /etc/network/interfaces
			echo '  address 192.168.50.1' >> /etc/network/interfaces
			echo '  netmask 255.255.255.0' >> /etc/network/interfaces
			echo '  network 192.168.50.0' >> /etc/network/interfaces
			echo '  broadcast 192.168.50.255' >> /etc/network/interfaces
		
			echo 'interface=lo,wlan0_ap' > /etc/dnsmasq.conf
			echo 'server=208.67.222.123' >> /etc/dnsmasq.conf
			echo 'server=208.67.220.123' >> /etc/dnsmasq.conf
			echo 'domain-needed' >> /etc/dnsmasq.conf
			echo 'bogus-priv' >> /etc/dnsmasq.conf
			echo 'dhcp-authoritative' >> /etc/dnsmasq.conf
			echo 'dhcp-range=192.168.50.50,192.168.50.99,4h' >> /etc/dnsmasq.conf
			echo 'dhcp-option=1,255.255.255.0' >> /etc/dnsmasq.conf
			echo 'dhcp-option=3,192.168.50.1' >> /etc/dnsmasq.conf
			echo 'dhcp-option=6,192.168.50.1' >> /etc/dnsmasq.conf
		
			# Add the Unit file(s)
			echo '[Unit]' > /lib/systemd/system/pistar-ap.service
			echo 'Description=Pi-Star HostAPD Service' >> /lib/systemd/system/pistar-ap.service
			echo 'After=syslog.target network.target' >> /lib/systemd/system/pistar-ap.service
			echo '' >> /lib/systemd/system/pistar-ap.service
			echo '[Service]' >> /lib/systemd/system/pistar-ap.service
			echo 'Type=notify' >> /lib/systemd/system/pistar-ap.service
			echo 'RemainAfterExit=yes' >> /lib/systemd/system/pistar-ap.service
			echo 'ExecStart=/usr/local/sbin/pistar-ap.service start' >> /lib/systemd/system/pistar-ap.service
			echo 'ExecStop=/usr/local/sbin/pistar-ap.service stop' >> /lib/systemd/system/pistar-ap.service
			echo 'ExecReload=/usr/local/sbin/pistar-ap.service restart' >> /lib/systemd/system/pistar-ap.service
			echo '' >> /lib/systemd/system/pistar-ap.service
			echo '[Install]' >> /lib/systemd/system/pistar-ap.service
			echo 'WantedBy=multi-user.target' >> /lib/systemd/system/pistar-ap.service
		
			echo '[Timer]' > /lib/systemd/system/pistar-ap.timer
			echo 'OnStartupSec=120' >> /lib/systemd/system/pistar-ap.timer
			echo '' >> /lib/systemd/system/pistar-ap.timer
			echo '[Install]' >> /lib/systemd/system/pistar-ap.timer
			echo 'WantedBy=multi-user.target' >> /lib/systemd/system/pistar-ap.timer
		
			# Restart SystemD and add the service
			systemctl daemon-reload
			systemctl enable pistar-ap.timer
		
			# Report the update status
			Message="Upgraded from ${pistarCurVersion} to 3.4.11..."
		else
			Message="In-place upgrades from 3.4.4 are not supported..."
		fi
	;;
	3.4.11)
	#	if [ ! -z "${pistarHardware}" ]; then
	#		sed -i 's/3.4.10/3.4.11/g' /etc/pistar-release
        #        	sed -i 's/3.4.10/3.4.11/g' /etc/motd
	#		curl --fail -o /etc/nxdngateway -s https://raw.githubusercontent.com/g4klx/NXDNClients/master/NXDNGateway/NXDNGateway.ini
	#		echo '[Unit]' > /lib/systemd/system/nxdngateway.service
	#		echo 'Description=NXDN Servce' >> /lib/systemd/system/nxdngateway.service
	#		echo 'After=syslog.target network.target mmdvmhost.timer' >> /lib/systemd/system/nxdngateway.service
	#		echo '' >> /lib/systemd/system/nxdngateway.service
	#		echo '[Service]' >> /lib/systemd/system/nxdngateway.service
	#		echo 'Type=forking' >> /lib/systemd/system/nxdngateway.service
	#		echo 'ExecStart=/usr/local/sbin/nxdngateway.service start' >> /lib/systemd/system/nxdngateway.service
	#		echo 'ExecStop=/usr/local/sbin/nxdngateway.service stop' >> /lib/systemd/system/nxdngateway.service
	#		echo 'ExecReload=/usr/local/sbin/nxdngateway.service restart' >> /lib/systemd/system/nxdngateway.service
	#		echo '' >> /lib/systemd/system/nxdngateway.service
	#		echo '[Install]' >> /lib/systemd/system/nxdngateway.service
	#		echo 'WantedBy=multi-user.target' >> /lib/systemd/system/nxdngateway.service
	#		echo '[Timer]' > /lib/systemd/system/nxdngateway.timer
	#		echo 'OnStartupSec=20' >> /lib/systemd/system/nxdngateway.timer
	#		echo '' >> /lib/systemd/system/nxdngateway.timer
	#		echo '[Install]' >> /lib/systemd/system/nxdngateway.timer
	#		echo 'WantedBy=multi-user.target' >> /lib/systemd/system/nxdngateway.timer
	#		echo '[Unit]' > /lib/systemd/system/nxdnparrot.service
	#		echo 'Description=NXDN Parrot' >> /lib/systemd/system/nxdnparrot.service
	#		echo 'After=syslog.target network.target nxdngateway.timer' >> /lib/systemd/system/nxdnparrot.service
	#		echo '' >> /lib/systemd/system/nxdnparrot.service
	#		echo '[Service]' >> /lib/systemd/system/nxdnparrot.service
	#		echo 'Type=forking' >> /lib/systemd/system/nxdnparrot.service
	#		echo 'ExecStart=/usr/local/sbin/nxdnparrot.service start' >> /lib/systemd/system/nxdnparrot.service
	#		echo 'ExecStop=/usr/local/sbin/nxdnparrot.service stop' >> /lib/systemd/system/nxdnparrot.service
	#		echo 'ExecReload=/usr/local/sbin/nxdnparrot.service restart' >> /lib/systemd/system/nxdnparrot.service
	#		echo '[Install]' > /lib/systemd/system/nxdnparrot.timer
	#		echo 'WantedBy=multi-user.target' >> /lib/systemd/system/nxdnparrot.timer
	#		echo '' >> /lib/systemd/system/nxdnparrot.timer
	#		echo '[Timer]' >> /lib/systemd/system/nxdnparrot.timer
	#		echo 'OnStartupSec=25' >> /lib/systemd/system/nxdnparrot.timer
	#		echo '' >> /lib/systemd/system/nxdnparrot.timer
	#		echo '[Install]' >> /lib/systemd/system/nxdnparrot.timer
	#		echo 'WantedBy=multi-user.target' >> /lib/systemd/system/nxdnparrot.timer
	#		Message="Upgraded from ${pistarCurVersion} to 3.4.12..."
	#	else
	#		Message="In-place upgrades from 3.4.4 are not supported..."
	#	fi
	
		Message="You are already running the lastest version..."
	;;
	3.4.12)
		Message="You are already running the lastest version..."
	;;
	3.5.0-Beta)
		Message="You are already running the lastest version..."
	;;
	3.5.0)
		Message="You are already running the lastest version..."
	;;
	*)
		Message="Somthing went very wrong, I cant tell what version I am running"
	;;
	esac

	echo $Message
	echo "Sleeping a few seconds before making the disk Read-Only..."
	sleep 3
	mount -o remount,ro /
        mount -o remount,ro /boot
	echo "Finished"

	}

if [ -t 1 ]; then
  # run via terminal, only output to screen
  main_function
else
  # if not run via terminal, log everything into a log file
  main_function >> /var/log/pi-star/pi-star_upgrade.log 2>&1
fi

exit 0
